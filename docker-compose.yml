version: '3.9'

services:
  todo-core:
    build:
      context: ./todo_core
      dockerfile: Dockerfile
      target: prod
    command: python src/manage.py runserver 0.0.0.0:8000
    image: todo-service-core
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - default

  comments:
    build:
      context: ./comments
      dockerfile: Dockerfile
      target: prod
    image: todo-service-comments
    restart: always
    env_file:
      - .env
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - default

  bot:
    image: todo-service-bot
    env_file:
      - .env
    build:
      context: ./bot/
    depends_on:
      - todo-core
      - comments

  db:
    image: postgres:13.8-bullseye
    hostname: "db"
    env_file:
      - .env
    volumes:
      - todo-service-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U dbUser -d todo-service
      interval: 2s
      timeout: 3s
      retries: 40

  redis:
    image: bitnami/redis:6.2.5
    hostname: "redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50

  comments-migrator:
    image: todo-service-comments
    restart: "no"
    command: alembic upgrade head
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  todo-core-migrator:
    image: todo-service-core
    restart: "no"
    command: python src/manage.py migrate --noinput
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy


networks:
  default:
    driver: bridge

volumes:
  todo-service-db-data:
    name: todo-service-db-data